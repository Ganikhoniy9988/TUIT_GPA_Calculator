// ==UserScript==
// @name         Ultimate GPA Hack Terminal
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Хакерский терминал с улучшенными функциями
// @author       Drik
// @match        https://ganikhoniy9988.github.io/TUIT_GPA_Calculator/
// @run-at       document-start
// @grant        GM_addStyle
// @grant        GM_registerMenuCommand
// ==/UserScript==

(function() {
    'use strict';

    GM_registerMenuCommand('Переключить терминал', () => {
        const Drik = document.getElementById('hackTerminal');
        Drik.style.display = Drik.style.display === 'none' ? 'block' : 'none';
    });

    GM_addStyle(`
        #hackTerminal {
            position: absolute;
            top: 20px;
            left: 20px;
            width: 350px;
            background: #0a0a0a;
            border: 2px solid #00ff00;
            padding: 10px;
            font-family: 'Courier New', monospace;
            color: #00ff00;
            z-index: 99999;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
        }
        #hackTerminal .header {
            background: #00ff00;
            color: #000;
            padding: 5px;
            text-align: center;
            cursor: move;
        }
        #hackTerminal .panel {
            margin: 10px 0;
            border: 1px dashed #00ff00;
            padding: 5px;
        }
        #hackTerminal button {
            background: #001100;
            border: 1px solid #00ff00;
            color: #00ff00;
            padding: 6px;
            margin: 3px 0;
            cursor: pointer;
            transition: all 0.2s;
            width: 100%;
        }
        #hackTerminal button:hover {
            background: #00ff00;
            color: #000;
            box-shadow: 0 0 10px #00ff00;
        }
        #hackTerminal button:hover:after {
            content: attr(data-desc);
            position: absolute;
            left: 105%;
            top: 50%;
            transform: translateY(-50%);
            background: #000;
            color: #00ff00;
            padding: 5px;
            border: 1px solid #00ff00;
            font-size: 10px;
        }
        #hackTerminal .output {
            margin-top: 10px;
            padding: 5px;
            border-top: 1px solid #00ff00;
            font-size: 11px;
            max-height: 100px;
            overflow-y: auto;
        }
    `);

    window.addEventListener('load', () => {
        const Drik = document.createElement('div');
        Drik.id = 'hackTerminal';
        Drik.innerHTML = `
            <div class="header">Хакерский Терминал v1.0</div>
            <div class="panel">
                <div>Эксплойты для страницы</div>
                <button data-hack="calcOverride">Перехватить расчет</button>
                <button data-hack="gpaHijack">Взломать GPA</button>
                <button data-hack="creditOverload">Перегрузить кредиты</button>
                <button data-hack="tableCrash">Сломать таблицу</button>
                <button data-hack="creditBypass">Обойти лимит кредитов</button>
                <button data-hack="dataInject">Вставить фейковые данные</button>
                <button data-hack="eventSpoof">Подделать события</button>
                <button data-hack="langBreak">Сломать язык</button>
            </div>
            <div class="panel">
                <div>Универсальные хаки</div>
                <button data-hack="blockAlerts">Убрать все alert</button>
                <button data-hack="freezePage">Заморозить страницу</button>
                <button data-hack="inputFlood">Заспамить поля ввода</button>
            </div>
            <div class="output" id="hackOutput">Вывод: Терминал загружен...</div>
        `;
        document.body.appendChild(Drik);

        const drik = document.getElementById('hackOutput');
        const log = (msg) => drik.textContent = `Вывод: ${msg}`;


        let driK = false;
        let x, y;
        const head = Drik.querySelector('.header');

        head.addEventListener('mousedown', (e) => {
            if (e.button === 2) {
                driK = true;
                const rect = Drik.getBoundingClientRect();
                x = e.clientX - rect.left;
                y = e.clientY - rect.top;
                e.preventDefault();
            }
        });

        document.addEventListener('mousemove', (e) => {
            if (driK) {
                Drik.style.left = `${e.clientX - x}px`;
                Drik.style.top = `${e.clientY - y}px`;
                Drik.style.right = 'auto';
            }
        });

        document.addEventListener('mouseup', () => driK = false);
        Drik.addEventListener('contextmenu', (e) => e.preventDefault());


        const hacks = {
            calcOverride: () => {
                log('Перехват расчета...');
                if (typeof window.calculateGPA !== 'function') return log('Функция не найдена');
                const orig = window.calculateGPA;
                window.calculateGPA = (g) => {
                    log('Расчет взломан');
                    return '5.00';
                };
                const lock = setInterval(() => {
                    if (window.calculateGPA !== orig) return;
                    window.calculateGPA = (g) => '5.00';
                }, 50);
                setTimeout(() => clearInterval(lock), 15000);
                log('Расчет перехвачен навсегда');
            },
            gpaHijack: () => {
                log('Взлом GPA начат...');
                const t = document.getElementById('gpaDisplay');
                if (!t) return log('Элемент GPA не найден');
                const hack = () => {
                    t.style.display = 'block';
                    t.textContent = 'GPA: 5.00 [ВЗЛОМАНО]';
                    t.setAttribute('data-hacked', 'true');
                };
                hack();
                const chk = setInterval(() => {
                    if (t.textContent !== 'GPA: 5.00 [ВЗЛОМАНО]') hack();
                    else clearInterval(chk);
                }, 100);
                log('GPA успешно взломан');
            },
            creditOverload: () => {
                log('Перегрузка кредитов...');
                const sub = document.getElementById('subjectCount');
                const tab = document.getElementById('tableContainer');
                if (!sub || !tab) return log('Элементы не найдены');
                sub.value = 3;
                sub.dispatchEvent(new Event('input', { bubbles: true }));
                const over = () => {
                    const tbl = tab.querySelector('table');
                    if (!tbl) return setTimeout(over, 100);
                    const rows = tbl.querySelectorAll('tr:not(:first-child)');
                    rows.forEach((row, i) => {
                        const cred = row.querySelector('input.credit');
                        const grad = row.querySelector('input.grade');
                        cred.value = i === 0 ? -999999 : 999999;
                        grad.value = 5;
                        cred.dispatchEvent(new Event('input', { bubbles: true }));
                        grad.dispatchEvent(new Event('input', { bubbles: true }));
                    });
                    log('Кредиты переполнены');
                };
                over();
            },
            tableCrash: () => {
                log('Слом таблицы начат...');
                const sub = document.getElementById('subjectCount');
                if (!sub) return log('Поле ввода не найдено');
                sub.value = 500;
                sub.dispatchEvent(new Event('input', { bubbles: true }));
                const crash = () => {
                    const tbl = document.getElementById('tableContainer').querySelector('table');
                    if (!tbl) return setTimeout(crash, 100);
                    const ins = tbl.querySelectorAll('input.credit, input.grade');
                    ins.forEach(inp => {
                        inp.value = '999';
                        inp.dispatchEvent(new Event('input', { bubbles: true }));
                    });
                    log('Таблица сломана');
                };
                crash();
            },
            creditBypass: () => {
                log('Обход лимита кредитов...');
                const sel = document.getElementById('courseSelect');
                if (!sel) return log('Выбор курса не найден');
                sel.value = '9999';
                sel.dispatchEvent(new Event('change', { bubbles: true }));
                const lock = setInterval(() => {
                    if (sel.value !== '9999') {
                        sel.value = '9999';
                        sel.dispatchEvent(new Event('change', { bubbles: true }));
                    }
                }, 100);
                setTimeout(() => clearInterval(lock), 5000);
                log('Лимит кредитов обойден');
            },
            dataInject: () => {
                log('Вставка фейковых данных...');
                const tab = document.getElementById('tableContainer');
                const sub = document.getElementById('subjectCount');
                if (!tab || !sub) return log('Элементы не найдены');
                sub.value = 1;
                sub.dispatchEvent(new Event('input', { bubbles: true }));
                const inj = () => {
                    const tbl = tab.querySelector('table');
                    if (!tbl) return setTimeout(inj, 100);
                    const row = tbl.querySelector('tr:not(:first-child) td:last-child');
                    const fake = document.createElement('input');
                    fake.type = 'number';
                    fake.className = 'credit';
                    fake.value = '9999';
                    row.appendChild(fake);
                    fake.dispatchEvent(new Event('input', { bubbles: true }));
                    log('Фейковые данные вставлены');
                };
                inj();
            },
            eventSpoof: () => {
                log('Подделка событий...');
                const ins = document.querySelectorAll('input.credit, input.grade');
                if (!ins.length) return log('Поля ввода не найдены');
                ins.forEach(inp => {
                    inp.value = '1000';
                    inp.dispatchEvent(new Event('input', { bubbles: true }));
                });
                const chk = setInterval(() => {
                    ins.forEach(inp => {
                        if (inp.value !== '1000') {
                            inp.value = '1000';
                            inp.dispatchEvent(new Event('input', { bubbles: true }));
                        }
                    });
                }, 100);
                setTimeout(() => clearInterval(chk), 3000);
                log('События подделаны');
            },
            langBreak: () => {
                log('Слом языка...');
                const sel = document.getElementById('langSelect');
                if (!sel) return log('Выбор языка не найден');
                sel.value = 'broken';
                const opts = sel.querySelectorAll('option');
                opts.forEach(opt => opt.remove());
                const fake = document.createElement('option');
                fake.value = 'broken';
                fake.textContent = 'СЛОМАНО';
                sel.appendChild(fake);
                log('Язык сломан');
            },
            blockAlerts: () => {
                log('Блокировка всех alert...');

                try {
                    window.alert = function() {};
                } catch (e) {}

                const script = document.createElement('script');
                script.textContent = `
                    (function() {
                        window.alert = function() {};
                    })();
                `;
                try {
                    (document.head || document.documentElement).appendChild(script);
                } catch (e) {}

                if (typeof Proxy !== 'undefined') {
                    try {
                        window.alert = new Proxy(window.alert, {
                            apply: function() {}
                        });
                    } catch (e) {}
                }

                try {
                    window.alert = function() {};
                    window.alert.call = function() {};
                } catch (e) {}

                const lock = setInterval(() => {
                    try {
                        if (window.alert.toString() !== 'function () {}') {
                            window.alert = function() {};
                        }
                    } catch (e) {}
                }, 50);
                setTimeout(() => clearInterval(lock), 20000);
                log('Все alert заблокированы');
            },
            freezePage: () => {
                log('Заморозка страницы...');
                const frz = () => {
                    const start = performance.now();
                    while (performance.now() - start < 3000) {}
                };
                frz();
                log('Страница заморожена на 3 секунды');
            },
            inputFlood: () => {
                log('Заспамить поля ввода...');
                const ins = document.querySelectorAll('input');
                if (!ins.length) return log('Поля ввода не найдены');
                ins.forEach(inp => {
                    const num = inp.type === 'number';
                    inp.value = num ? Math.floor(Math.random() * 10000) : Math.random().toString(36).slice(2);
                    inp.dispatchEvent(new Event('input', { bubbles: true }));
                });
                const fld = setInterval(() => {
                    ins.forEach(inp => {
                        const num = inp.type === 'number';
                        inp.value = num ? Math.floor(Math.random() * 10000) : Math.random().toString(36).slice(2);
                        inp.dispatchEvent(new Event('input', { bubbles: true }));
                    });
                }, 500);
                setTimeout(() => clearInterval(fld), 5000);
                log('Поля ввода заспамлены');
            }
        };

        Drik.addEventListener('click', (e) => {
            const hack = e.target.getAttribute('data-hack');
            if (hack && hacks[hack]) hacks[hack]();
        });

        Drik.querySelector('[data-hack="calcOverride"]').setAttribute('data-desc', 'Заставляет расчет выдавать 5.00');
        Drik.querySelector('[data-hack="gpaHijack"]').setAttribute('data-desc', 'Меняет GPA на 5.00 напрямую');
        Drik.querySelector('[data-hack="creditOverload"]').setAttribute('data-desc', 'Вставляет огромные значения в кредиты');
        Drik.querySelector('[data-hack="tableCrash"]').setAttribute('data-desc', 'Перегружает таблицу 500 строками');
        Drik.querySelector('[data-hack="creditBypass"]').setAttribute('data-desc', 'Устанавливает лимит кредитов 9999');
        Drik.querySelector('[data-hack="dataInject"]').setAttribute('data-desc', 'Добавляет фейковый ввод в таблицу');
        Drik.querySelector('[data-hack="eventSpoof"]').setAttribute('data-desc', 'Подделывает события ввода');
        Drik.querySelector('[data-hack="langBreak"]').setAttribute('data-desc', 'Ломает выбор языка');
        Drik.querySelector('[data-hack="blockAlerts"]').setAttribute('data-desc', 'Блокирует все всплывающие alert');
        Drik.querySelector('[data-hack="freezePage"]').setAttribute('data-desc', 'Замораживает страницу на 3 секунды');
        Drik.querySelector('[data-hack="inputFlood"]').setAttribute('data-desc', 'Заполняет все поля случайными данными');
    });
})();